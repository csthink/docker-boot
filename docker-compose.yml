version: "3.7"
services:
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    volumes:
      - ${WEB_DIR}:/var/www/html/:rw
      - ${NGINX_CONFIG_DIR}:/etc/nginx/conf.d/:ro
      - ${NGINX_CONFIG_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_CERTS_DIR}:/etc/nginx/certs:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - frontend
      - backend
    command: nginx -g 'daemon off;'

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_CONFIG_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/lib/logs/:rw
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"
    restart: always
    networks:
      - backend

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${REDIS_CONFIG_FILE}:/etc/redis.conf:ro
      - ${REDIS_DATA_DIR}:/data:rw
    environment:
      TZ: "$TZ"
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    networks:
      - frontend
      - backend

networks:
    frontend:
    backend:
